version: '3.8'

services:
  backend:
    image: ${SERVER_ECR_REPOSITORY}:${IMAGE_TAG:-latest}
    container_name: robovers-backend
    restart: unless-stopped
    ports:
      - "4010:4010"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    networks:
      - robovers-network
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4010/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: robovers-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-robovers}
      POSTGRES_USER: ${DB_USER:-robovers}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - robovers-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-robovers}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: robovers-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - robovers-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  robovers-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: