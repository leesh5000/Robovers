version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: robovers-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: robovers
      POSTGRES_PASSWORD: robovers123
      POSTGRES_DB: robovers
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - robovers-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U robovers -d robovers"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: robovers-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - robovers-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: robovers-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@robovers.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    networks:
      - robovers-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  robovers-network:
    driver: bridge
    name: robovers-network